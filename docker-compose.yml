version: '3.7'

services:
  configurazioni:
    image: ${IMAGE_CONFIGURAZIONI}
    container_name: api-configurazioni
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-configurazioni/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-configurazioni/logs:/app/Logs
    networks:
      - lan-network

  autenticazione:
    image: ${IMAGE_AUTENTICAZIONE}
    container_name: api-autenticazione
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-autenticazione/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-autenticazione/logs:/app/Logs
    depends_on:
      - configurazioni
    networks:
      - lan-network

  gateway:
    image: ${IMAGE_GATEWAY}
    container_name: api-gateway
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-gateway/appsettings.json:/app/appsettings.json
    ports:
      - 5100:5001
    depends_on:
      - configurazioni
    networks:
      - lan-network

  configurazionesmtp:
    image: ${IMAGE_CONFIGURAZIONESMTP}
    container_name: api-configurazionesmtp
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-configurazionesmtp/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-configurazionesmtp/logs:/app/Logs
    depends_on:
      - configurazioni
    networks:
      - lan-network

  gestionedocumenti:
    image: ${IMAGE_GESTIONEDOCUMENTI}
    container_name: api-gestionedocumenti
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-gestionedocumenti/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-gestionedocumenti/logs:/app/Logs
      - /docker/storage/storage-api-gestionedocumenti/uploads:/app/Uploads
    depends_on:
      - configurazioni
    networks:
      - lan-network

  gestioneloghi:
    image: ${IMAGE_GESTIONELOGHI}
    container_name: api-gestioneloghi
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-gestioneloghi/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-gestioneloghi/logs:/app/Logs
      - /docker/storage/storage-api-gestioneloghi/uploads:/app/Uploads
    depends_on:
      - configurazioni
    networks:
      - lan-network

  invioemail:
    image: ${IMAGE_INVIOEMAIL}
    container_name: api-invioemail
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-invioemail/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-invioemail/logs:/app/Logs
    depends_on:
      - configurazioni
    networks:
      - lan-network

  traduzioni:
    image: ${IMAGE_TRADUZIONI}
    container_name: api-traduzioni
    restart: "always"
    environment:
      - ASPNETCORE_ENVIRONMENT="production"
      - ASPNETCORE_URLS=http://*:5001
    volumes:
      - /docker/storage/storage-api-traduzioni/appsettings.json:/app/appsettings.json
      - /docker/storage/storage-api-traduzioni/logs:/app/Logs
    depends_on:
      - configurazioni
    networks:
      - lan-network

networks:
  lan-network:
    external:
      name: docker-net